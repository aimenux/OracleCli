# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build
    - name: Publish OracleCli
      uses: alirezanet/publish-nuget@v3.0.3
      with:
          PACKAGE_NAME: OracleCli
          PROJECT_FILE_PATH: src/App/App.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}

  sonar:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: highbyte/sonarscan-dotnet@v2.2.1
        with:
          sonarProjectName:  OracleCli
          sonarProjectKey: OracleCli-Key
          sonarOrganization: aimenux-sonar-cloud-key
          dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/**/TestResults/**/coverage.opencover.xml" /d:sonar.cs.vstest.reportsPaths="**/**/TestResults/*.trx"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 