using System.Text;
using System.Text.RegularExpressions;
using App.Services.Oracle;

namespace App.Services.Exporters;

public class SqlExportService : ISqlExportService
{
    public async Task ExportOracleSourcesAsync(ICollection<OracleSource> oracleSources, OracleParameters parameters, CancellationToken cancellationToken)
    {
        var sqlBuilder = new StringBuilder
        (
            $$"""
            -- code generated by oracle-cli at {{DateTime.Now:F}}


            """
        );

        foreach (var oracleSource in oracleSources.Where(x => !string.IsNullOrWhiteSpace(x.Text)))
        {
            sqlBuilder.Append(oracleSource.Text);
        }

        var sqlText = sqlBuilder.ToString();
        var errors = GetOracleSourcesErrors(sqlText);
        await File.WriteAllTextAsync(parameters.OutputFile, sqlText, cancellationToken);
        await File.WriteAllLinesAsync(parameters.ErrorsFile, errors, cancellationToken);
    }

    private static ICollection<string> GetOracleSourcesErrors(string sqlText)
    {
        var timeout = TimeSpan.FromSeconds(5);
        const RegexOptions options = RegexOptions.Compiled;
        var errors = Regex.Matches(sqlText, @"(=>)(\s)('\w+')", options, timeout)
            .Select(CleanMatch)
            .Distinct()
            .ToList();
        return errors;
    }

    private static string CleanMatch(Match match)
    {
        return match.Value
            .Replace("=", "")
            .Replace(">", "")
            .Replace("'", "")
            .Trim();
    }
}